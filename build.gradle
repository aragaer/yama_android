// vim: et ts=4 sts=4 sw=4 syntax=groovy
buildscript {
    repositories {
	mavenCentral()
    }
    dependencies {
	classpath 'com.android.tools.build:gradle:1.2.2'
    }
}

apply plugin: 'android'

repositories {
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
}

android {
    compileSdkVersion 22
    buildToolsVersion '22.0.1'

    productFlavors {
	regular {
	    targetSdkVersion 22
	}
	instrumented {
	    minSdkVersion 18
	    targetSdkVersion 22
	}
    }

    sourceSets {
	main {
	    manifest.srcFile 'AndroidManifest.xml'
	    java.srcDirs = ['src/main/java']
	    res.srcDirs = ['res']
	}
	debug.setRoot('build-types/debug')
	release.setRoot('build-types/release')

	test.setRoot('src/test')
    }

    defaultConfig {
	testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
	release {
	    storeFile file(".")
	    storePassword ''
	    keyAlias ''
	    keyPassword ''
	}
    }

    buildTypes {
	debug {
	}
	release {
	    minifyEnabled true
	    proguardFile 'proguard.cfg'
	    signingConfig signingConfigs.release
	    zipAlignEnabled true
	}
    }

    packagingOptions {
	exclude 'LICENSE.txt'
    }
}

dependencies {
    compile 'com.android.support:support-annotations:22.2.0'
    compile 'com.android.support:support-v4:22.1.1'
    compile 'com.android.support:appcompat-v7:22.1.1'
    compile 'com.android.support:design:22.2.0'
    testCompile 'junit:junit:4.12'
    testCompile 'org.hamcrest:hamcrest-core:1.1'
    testCompile 'org.robolectric:robolectric:2.4'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2'
    androidTestInstrumentedCompile 'com.android.support.test:rules:0.3'
    androidTestInstrumentedCompile 'com.android.support.test:runner:0.3'
    androidTestInstrumentedCompile 'com.android.support.test.uiautomator:uiautomator-v18:2.1.1'
}

gradle.taskGraph.whenReady { taskGraph ->
    if (taskGraph.hasTask(':assembleRegularRelease')) {
	Properties properties = new Properties()
	properties.load(project.rootProject.file('local.properties').newDataInputStream())

	def store_file = file(properties.getProperty('key.file'))
	def store_pass = System.console().readPassword("\nPlease enter store passphrase: ")
	def key_alias = properties.getProperty('key.alias')
	def key_pass = System.console().readPassword("\nPlease enter key passphrase: ")

	android.signingConfigs.release.storeFile = store_file
	android.signingConfigs.release.storePassword = new String(store_pass)
	android.signingConfigs.release.keyAlias = new String(key_alias)
	android.signingConfigs.release.keyPassword = new String(key_pass)
    }
}

tasks.withType(Test) {
    testLogging.exceptionFormat = 'full'
}